apiVersion: v1
kind: ConfigMap
metadata:
  name: params-ita-by-menu-create
  namespace: {{ .Release.Namespace }}
data:
  EXECUTE_INTERVAL: "{{ .Values.itaByMenuCreate.EXECUTE_INTERVAL }}"
  STORAGEPATH: "{{ .Values.itaByMenuCreate.STORAGEPATH }}"
  CONTAINER_BASE: "{{ .Values.itaByMenuCreate.CONTAINER_BASE }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.itaByMenuCreate.name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      name: {{ .Values.itaByMenuCreate.name }} 
  replicas: {{ .Values.itaByMenuCreate.replicas }} 
  template:
    metadata:
      labels:
        name: {{ .Values.itaByMenuCreate.name }} 
    spec:
      containers:
      - name: {{ .Values.itaByMenuCreate.name }} 
        image: {{ .Values.itaByMenuCreate.resources.image }}
        imagePullPolicy: {{ .Values.itaByMenuCreate.resources.imagePullPolicy }}
        resources:
          requests:
            memory: "{{ .Values.itaByMenuCreate.resources.resourceRequestsMemory }}"  #仮決め
            cpu: "{{ .Values.itaByMenuCreate.resources.resourceRequestsCpu }}"  #仮決め
          #limits:
          #  memory: "{{ .Values.itaByMenuCreate.resources.resourceLimitMemory }}"  #仮決め
          #  cpu:  "{{ .Values.itaByMenuCreate.resources.resourceLimitCpu }}"  #仮決め
        securityContext:
          allowPrivilegeEscalation: {{ .Values.itaByMenuCreate.security.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.itaByMenuCreate.security.readOnlyRootFilesystem }}
          runAsUser: {{ .Values.itaByMenuCreate.security.runAsUser }}
          runAsGroup: {{ .Values.itaByMenuCreate.security.runAsGroup }}
          runAsNonRoot: {{ .Values.itaByMenuCreate.security.runAsNonRoot }}
        envFrom:
        - secretRef:
            name: {{ .Values.global.dbAccountInfo }}
        - configMapRef:
            name: {{ .Values.global.dbConnectionInfo }}
        - configMapRef:
            name: {{ .Values.global.itaBaseInfo }}
        - configMapRef:
            name: {{ .Values.global.itaByMenuCreateInfo }}
        volumeMounts:
          - name: persistent-storage
            mountPath: {{ .Values.itaByMenuCreate.volume.mountPath }}
            subPath: {{ .Values.itaByMenuCreate.volume.subPath }}
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.global.claimName }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.itaByMenuCreate.name }} 
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Values.itaByMenuCreate.name }}e 
spec:
  type: {{ .Values.itaByMenuCreate.serviceType }}
  ports:
  - name: {{ .Values.itaByMenuCreate.servicePortsName }}
    port: {{ .Values.itaByMenuCreate.servicePortsNumber }}
    targetPort: {{ .Values.itaByMenuCreate.servicePortsTargetNumber }}
  selector:
    name: {{ .Values.itaByMenuCreate.name }} 
